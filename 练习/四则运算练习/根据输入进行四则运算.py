"""
输入一个公式，将其中的数字、运算符提取出来，进行四则运算

1.考虑是否有乘除运算，有则先进行乘除计算

2.乘除计算结束后进行加减运算


思路：

1、字符串预处理，将所有空格去除

2、判断是否存在括号运算，若存在进行第3步，若不存在则直接进入第4步

3、利用正则表达式获取最底层括号内的四则运算表达式

4、将四则运算表达式进行预处理：表达式开头有负数时，在表达式前加上一个0

5、利用re.split()、re.findall()方法，通过加减符号，对四则运算进行拆分为乘除运算式和数字，并保留对应的位置下标。

6、利用re.split()、re.findall()方法，通过乘除符号，将乘除式拆分为乘除符号与数字，然后进行计算，并返回数值。

7、通过re.split()、re.findall()保留的下标位置，将表达式还原。

8、完成所有乘除运算之后，返回进行加减运算。

9、完成加减运算后，返回表达式进行替代。

10、通过递归函数，完成所有括号运算后。最后再完成一次四则运算即可完成所有运算。





"""
import re

def calculate():



    formula = '45-456*5*9+689/89'

    #提取括号中内容
    s = re.findall(r'\((.*?)\)',formula)

    # 判断是否存在括号  如果有括号，则 s返回一个有数据的列表，否则返回一个空列表，也就是 False ，可以直接用if判断
    if not s:
        print('无括号')

        #利用+-符号进行分割，拆分为乘除运算式和数字    \+ 表示匹配加号  - 表示匹配减号， [ab]和a|b都表示 匹配a或b
        s1  = re.split(r'\+|-',formula)
        # s1  = re.split(r'[\+-]',formula)
        print(s1)

        for i in s1:
            #利用*/符号分割，拆分为数字
            # s2 = re.split('(\d+)\*+|/(\d+)',i)
            # # print(s2)
            # if s2:
            #     print(s2)

            s3 = re.findall(r'(\d+)[*/](.*)',i)
                i = s3[1]
            if  s3:
                print(s3)

            #进行乘除运算







    else:
        print('存在括号')
        print(f'括号中内容为{s}')
        for i in s:
            print(i)
        # print(f'括号中内容为{s[0]}')
    # print(len(s))

    # print(f'{formula}=')

calculate()